# Info about this package.
[package]
authors = ["Lee Lup Yuen <luppy@appkaki.com>"]
edition = "2018"
readme  = "README.md"
name    = "app"
version = "0.1.0"

# External Rust libraries used by this module.  See crates.io.
[dependencies]
embedded-hal = "0.2.3" # Rust Embedded HAL Framework
arrayvec     = { version = "0.5.1", default-features = false }
cty       = "0.2.0"  # String utilities from cty library: https://crates.io/crates/cty
cstr_core = "0.1.2"  # String utilities from cstr_core library: https://crates.io/crates/cstr_core
memchr    = { version = "2", default-features = false } # String search. Reduce the ROM size by disabling default features. See https://github.com/BurntSushi/rust-memchr
cortex-m  = { version = "0.6.1", features = [ "inline-asm" ] }  # Arm Cortex-M utilities: https://crates.io/crates/cortex-m
macros = { path = "../macros" } # Import path `../macros` as macros library
mynewt = { path = "../mynewt" } # Import path `../mynewt` as mynewt library
# Druid UI Dependencies
druid        = { path = "../druid-embedded/druid" }        # TODO: https://github.com/lupyuen/druid-embedded
druid-derive = { path = "../druid-embedded/druid-derive" } # TODO: https://github.com/lupyuen/druid-embedded
druid-shell  = { path = "../druid-embedded/druid-shell" }  # TODO: https://github.com/lupyuen/druid-embedded
embedded-graphics = "0.5.2"

# Build this module as a Rust library, not a Rust application.  We will link this library with the Mynewt executable.
[lib]
name       = "app"  # Output will be named `libapp.rlib`
test       = false
bench      = false

# Optional features
[features]
default =  [          # Select the conditional compiled features
    #"display_app",    # Uncomment to enable graphics display app
    "ui_app",       # Uncomment to enable druid UI app
    # "use_float",    # Uncomment to enable floating-point support e.g. GPS geolocation
]
display_app  = []     # Define the features
ui_app       = []
use_float    = []